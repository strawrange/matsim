2017-01-21 01:04:59,704  INFO Gbl:57 JVM: 1.8.0_73; Oracle Corporation; mixed mode; 64-bit
2017-01-21 01:04:59,705  INFO Gbl:61 OS: Windows 8.1; 6.3; amd64
2017-01-21 01:04:59,706  INFO Gbl:64 CPU cores: 4
2017-01-21 01:04:59,706  INFO Gbl:65 max. Memory: 892.5MB (935854080B)
2017-01-21 01:04:59,709  INFO Gbl:103 MATSim-Build: r${buildNumber} (${timestamp})
2017-01-21 01:04:59,710  INFO AbstractController:58 Used Controler-Class: org.matsim.core.controler.NewControler
2017-01-21 01:04:59,710  INFO Config:537 ConfigConsistencyChecker with runtime type=class org.matsim.core.config.consistency.ConfigConsistencyCheckerImpl was already added; not adding it a second time
2017-01-21 01:04:59,714  INFO Injector:77 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=81, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,717  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=81, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@57d7f8ca}
2017-01-21 01:04:59,718  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=81, type=MULTIBINDER, keyType=)], source=org.matsim.contrib.otfvis.OTFVisLiveModule.install(OTFVisLiveModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.contrib.otfvis.OTFVisLiveModule$OTFVisMobsimListener, annotation=[none]]}
2017-01-21 01:04:59,718  INFO Injector:77 org.matsim.core.mobsim.framework.Mobsim 
2017-01-21 01:04:59,719  INFO Injector:78    -> Key[type=rideSharing.RideShareQSimProvider, annotation=[none]]
2017-01-21 01:04:59,719  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.Mobsim, annotation=[none]], source=org.matsim.contrib.dynagent.run.DynQSimModule.install(DynQSimModule.java:51), scope=Scopes.NO_SCOPE, provider=Key[type=rideSharing.RideShareQSimProvider, annotation=[none]]}
2017-01-21 01:04:59,720  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride_share_passenger)
2017-01-21 01:04:59,720  INFO Injector:78    -> of(org.matsim.contrib.dynagent.run.DynRoutingModule@71238fc2)
2017-01-21 01:04:59,720  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride_share_passenger)], source=rideSharing.Run$1.install(Run.java:58), instance=org.matsim.contrib.dynagent.run.DynRoutingModule@71238fc2}
2017-01-21 01:04:59,720  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride_share_driver)
2017-01-21 01:04:59,721  INFO Injector:78    -> of(rideSharing.RideShareRoutingModule@505fc5a4)
2017-01-21 01:04:59,721  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride_share_driver)], source=rideSharing.Run$1.install(Run.java:60), instance=rideSharing.RideShareRoutingModule@505fc5a4}
2017-01-21 01:04:59,721  INFO Injector:77 org.matsim.contrib.dvrp.data.VrpData 
2017-01-21 01:04:59,722  INFO Injector:78    -> of(org.matsim.contrib.dvrp.data.VrpDataImpl@25084a1e)
2017-01-21 01:04:59,723  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.contrib.dvrp.data.VrpData, annotation=[none]], source=rideSharing.Run$1.install(Run.java:61), instance=org.matsim.contrib.dvrp.data.VrpDataImpl@25084a1e}
2017-01-21 01:04:59,724  INFO Injector:77 org.matsim.api.core.v01.Scenario 
2017-01-21 01:04:59,724  INFO Injector:78    -> of(org.matsim.core.scenario.MutableScenario@71def8f8)
2017-01-21 01:04:59,725  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.api.core.v01.Scenario, annotation=[none]], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:31), instance=org.matsim.core.scenario.MutableScenario@71def8f8}
2017-01-21 01:04:59,725  INFO Injector:77 org.matsim.pt.transitSchedule.api.TransitSchedule 
2017-01-21 01:04:59,726  INFO Injector:78    -> Key[type=org.matsim.core.scenario.ScenarioByInstanceModule$TransitScheduleProvider, annotation=[none]]
2017-01-21 01:04:59,726  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.pt.transitSchedule.api.TransitSchedule, annotation=[none]], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:33), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.scenario.ScenarioByInstanceModule$TransitScheduleProvider, annotation=[none]]}
2017-01-21 01:04:59,726  INFO Injector:77 org.matsim.vehicles.Vehicles 
2017-01-21 01:04:59,727  INFO Injector:78    -> Key[type=org.matsim.core.scenario.ScenarioByInstanceModule$TransitVehiclesProvider, annotation=[none]]
2017-01-21 01:04:59,727  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=@org.matsim.pt.transitSchedule.api.Transit], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:34), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.scenario.ScenarioByInstanceModule$TransitVehiclesProvider, annotation=[none]]}
2017-01-21 01:04:59,728  INFO Injector:77 org.matsim.vehicles.Vehicles 
2017-01-21 01:04:59,744  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2017-01-21 01:04:59,745  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=[none]], source=org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)}
2017-01-21 01:04:59,745  INFO Injector:77 org.matsim.lanes.data.Lanes 
2017-01-21 01:04:59,746  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2017-01-21 01:04:59,746  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.lanes.data.Lanes, annotation=[none]], source=org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)}
2017-01-21 01:04:59,747  INFO Injector:77 org.matsim.api.core.v01.network.Network 
2017-01-21 01:04:59,747  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2017-01-21 01:04:59,747  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.network.Network, annotation=[none]], source=org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)}
2017-01-21 01:04:59,748  INFO Injector:77 org.matsim.households.Households 
2017-01-21 01:04:59,748  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2017-01-21 01:04:59,749  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.households.Households, annotation=[none]], source=org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)}
2017-01-21 01:04:59,827  INFO Injector:77 org.matsim.api.core.v01.population.PopulationFactory 
2017-01-21 01:04:59,827  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2017-01-21 01:04:59,828  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.PopulationFactory, annotation=[none]], source=org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)}
2017-01-21 01:04:59,828  INFO Injector:77 org.matsim.facilities.ActivityFacilities 
2017-01-21 01:04:59,828  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2017-01-21 01:04:59,828  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.facilities.ActivityFacilities, annotation=[none]], source=org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)}
2017-01-21 01:04:59,829  INFO Injector:77 org.matsim.api.core.v01.population.Population 
2017-01-21 01:04:59,829  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2017-01-21 01:04:59,829  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.Population, annotation=[none]], source=org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)}
2017-01-21 01:04:59,829  INFO Injector:77 org.matsim.core.controler.ControlerI 
2017-01-21 01:04:59,830  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1e04fa0a}[Scopes.SINGLETON]
2017-01-21 01:04:59,830  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8), scope=eager singleton, target=Key[type=org.matsim.core.controler.NewControler, annotation=[none]]}
2017-01-21 01:04:59,831  INFO Injector:77 org.matsim.core.controler.ControlerListenerManager 
2017-01-21 01:04:59,831  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@58695725[Scopes.SINGLETON]}
2017-01-21 01:04:59,832  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]]}
2017-01-21 01:04:59,832  INFO Injector:77 org.matsim.core.controler.PrepareForSim 
2017-01-21 01:04:59,832  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5d7148e2}
2017-01-21 01:04:59,833  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.PrepareForSimImpl, annotation=[none]]}
2017-01-21 01:04:59,833  INFO Injector:77 org.matsim.core.controler.TerminationCriterion 
2017-01-21 01:04:59,833  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7bd4937b}
2017-01-21 01:04:59,834  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.TerminateAtFixedIterationNumber, annotation=[none]]}
2017-01-21 01:04:59,834  INFO Injector:77 org.matsim.core.controler.MatsimServices 
2017-01-21 01:04:59,834  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@74751b3}
2017-01-21 01:04:59,835  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.MatsimServicesImpl, annotation=[none]]}
2017-01-21 01:04:59,835  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansScoring 
2017-01-21 01:04:59,836  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6fd83fc1[Scopes.SINGLETON]}
2017-01-21 01:04:59,836  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.PlansScoringImpl, annotation=[none]]}
2017-01-21 01:04:59,836  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansReplanning 
2017-01-21 01:04:59,837  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@e15b7e8[Scopes.SINGLETON]}
2017-01-21 01:04:59,837  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansReplanningImpl, annotation=[none]]}
2017-01-21 01:04:59,838  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansDumping 
2017-01-21 01:04:59,838  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@d5b810e[Scopes.SINGLETON]}
2017-01-21 01:04:59,839  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansDumpingImpl, annotation=[none]]}
2017-01-21 01:04:59,839  INFO Injector:77 org.matsim.core.controler.corelisteners.EventsHandling 
2017-01-21 01:04:59,840  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5d0a1059[Scopes.SINGLETON]}
2017-01-21 01:04:59,840  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.EventsHandlingImpl, annotation=[none]]}
2017-01-21 01:04:59,840  INFO Injector:77 org.matsim.core.controler.corelisteners.DumpDataAtEnd 
2017-01-21 01:04:59,841  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@593aaf41[Scopes.SINGLETON]}
2017-01-21 01:04:59,842  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEndImpl, annotation=[none]]}
2017-01-21 01:04:59,842  INFO Injector:77 org.matsim.core.api.experimental.events.EventsManager 
2017-01-21 01:04:59,843  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5b03b9fe}[Scopes.SINGLETON]
2017-01-21 01:04:59,844  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23), scope=eager singleton, target=Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]}
2017-01-21 01:04:59,844  INFO Injector:77 org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory 
2017-01-21 01:04:59,845  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2805d709}
2017-01-21 01:04:59,845  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.DefaultQNetworkFactory, annotation=[none]]}
2017-01-21 01:04:59,846  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2017-01-21 01:04:59,846  INFO Injector:78    -> Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2017-01-21 01:04:59,847  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2017-01-21 01:04:59,847  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=ride_share_driver)
2017-01-21 01:04:59,847  INFO Injector:78    -> Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2017-01-21 01:04:59,848  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=ride_share_driver)], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2017-01-21 01:04:59,848  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2017-01-21 01:04:59,849  INFO Injector:78    -> of(org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@53ce1329)
2017-01-21 01:04:59,849  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34), instance=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@53ce1329}
2017-01-21 01:04:59,850  INFO Injector:77 org.matsim.core.scoring.ScoringFunctionFactory 
2017-01-21 01:04:59,850  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1de5f259}
2017-01-21 01:04:59,851  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionFactory, annotation=[none]]}
2017-01-21 01:04:59,851  INFO Injector:77 org.matsim.core.scoring.functions.CharyparNagelScoringParametersForPerson 
2017-01-21 01:04:59,852  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringParametersForPerson, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@32502377}
2017-01-21 01:04:59,852  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringParametersForPerson, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.SubpopulationCharyparNagelScoringParameters, annotation=[none]]}
2017-01-21 01:04:59,853  INFO Injector:77 org.matsim.core.scoring.ExperiencedPlansService 
2017-01-21 01:04:59,855  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@550dbc7a}[Scopes.SINGLETON]
2017-01-21 01:04:59,855  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10), scope=eager singleton, target=Key[type=org.matsim.core.scoring.ExperiencedPlansServiceImpl, annotation=[none]]}
2017-01-21 01:04:59,856  INFO Injector:77 org.matsim.core.router.MainModeIdentifier 
2017-01-21 01:04:59,858  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@437da279}
2017-01-21 01:04:59,859  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:42), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]}
2017-01-21 01:04:59,859  INFO Injector:77 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2017-01-21 01:04:59,860  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@12aba8be[Scopes.SINGLETON]}
2017-01-21 01:04:59,860  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], source=org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:36), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.DijkstraFactory, annotation=[none]]}
2017-01-21 01:04:59,861  INFO Injector:77 org.matsim.pt.router.TransitRouter 
2017-01-21 01:04:59,861  INFO Injector:78    -> Key[type=org.matsim.pt.router.TransitRouterImplFactory, annotation=[none]]
2017-01-21 01:04:59,862  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.pt.router.TransitRouter, annotation=[none]], source=org.matsim.pt.router.TransitRouterModule.install(TransitRouterModule.java:34), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.pt.router.TransitRouterImplFactory, annotation=[none]]}
2017-01-21 01:04:59,862  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2017-01-21 01:04:59,863  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@34e9fd99
2017-01-21 01:04:59,864  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:53), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@34e9fd99}
2017-01-21 01:04:59,864  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2017-01-21 01:04:59,865  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@3c41ed1d
2017-01-21 01:04:59,865  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:56), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@3c41ed1d}
2017-01-21 01:04:59,865  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2017-01-21 01:04:59,872  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@54d9d12d
2017-01-21 01:04:59,873  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:56), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@54d9d12d}
2017-01-21 01:04:59,873  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2017-01-21 01:04:59,873  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@38425407
2017-01-21 01:04:59,874  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:56), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@38425407}
2017-01-21 01:04:59,874  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2017-01-21 01:04:59,874  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@43bc63a3
2017-01-21 01:04:59,875  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:56), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@43bc63a3}
2017-01-21 01:04:59,876  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2017-01-21 01:04:59,876  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@702657cc
2017-01-21 01:04:59,877  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:56), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@702657cc}
2017-01-21 01:04:59,877  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2017-01-21 01:04:59,878  INFO Injector:78    -> org.matsim.core.router.NetworkRouting@6a6cb05c
2017-01-21 01:04:59,878  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:59), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.NetworkRouting@6a6cb05c}
2017-01-21 01:04:59,879  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2017-01-21 01:04:59,879  INFO Injector:78    -> Key[type=org.matsim.core.router.Transit, annotation=[none]]
2017-01-21 01:04:59,879  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:63), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.router.Transit, annotation=[none]]}
2017-01-21 01:04:59,880  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bus)
2017-01-21 01:04:59,880  INFO Injector:78    -> Key[type=org.matsim.core.router.Transit, annotation=[none]]
2017-01-21 01:04:59,880  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bus)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:63), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.router.Transit, annotation=[none]]}
2017-01-21 01:04:59,880  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=transit_walk)
2017-01-21 01:04:59,881  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=transit_walk)], provider=org.matsim.core.router.BeelineTeleportationRouting@54d9d12d}
2017-01-21 01:04:59,881  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=transit_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:65), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]}
2017-01-21 01:04:59,882  INFO Injector:77 org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person> 
2017-01-21 01:04:59,882  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7d4f9aae}
2017-01-21 01:04:59,883  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:49), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector, annotation=[none]]}
2017-01-21 01:04:59,887  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ChangeExpBeta)
2017-01-21 01:04:59,903  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]
2017-01-21 01:04:59,905  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ChangeExpBeta)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:85), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]}
2017-01-21 01:04:59,906  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ReRoute)
2017-01-21 01:04:59,906  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]
2017-01-21 01:04:59,907  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:98), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2017-01-21 01:04:59,908  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=TimeAllocationMutator)
2017-01-21 01:04:59,908  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.TimeAllocationMutator, annotation=[none]]
2017-01-21 01:04:59,909  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=TimeAllocationMutator)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:101), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.TimeAllocationMutator, annotation=[none]]}
2017-01-21 01:04:59,909  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=SubtourModeChoice)
2017-01-21 01:04:59,910  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.SubtourModeChoice, annotation=[none]]
2017-01-21 01:04:59,910  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=SubtourModeChoice)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:107), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.SubtourModeChoice, annotation=[none]]}
2017-01-21 01:04:59,912  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ChangeTripMode)
2017-01-21 01:04:59,912  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.ChangeTripMode, annotation=[none]]
2017-01-21 01:04:59,913  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ChangeTripMode)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:110), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ChangeTripMode, annotation=[none]]}
2017-01-21 01:04:59,914  INFO Injector:77 org.matsim.core.replanning.ReplanningContext 
2017-01-21 01:04:59,914  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4f80542f[Scopes.SINGLETON]}[Scopes.SINGLETON]
2017-01-21 01:04:59,915  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:48), scope=eager singleton, target=Key[type=org.matsim.core.replanning.ReplanningContextImpl, annotation=[none]]}
2017-01-21 01:04:59,915  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-01-21 01:04:59,916  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]}
2017-01-21 01:04:59,916  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ChangeExpBeta)]}
2017-01-21 01:04:59,916  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-01-21 01:04:59,917  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ChangeTripMode, annotation=[none]]}
2017-01-21 01:04:59,917  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ChangeTripMode)]}
2017-01-21 01:04:59,918  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-01-21 01:04:59,918  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2017-01-21 01:04:59,919  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)]}
2017-01-21 01:04:59,921  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-01-21 01:04:59,921  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.SubtourModeChoice, annotation=[none]]}
2017-01-21 01:04:59,922  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=SubtourModeChoice)]}
2017-01-21 01:04:59,923  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-01-21 01:04:59,924  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.TimeAllocationMutator, annotation=[none]]}
2017-01-21 01:04:59,924  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=TimeAllocationMutator)]}
2017-01-21 01:04:59,925  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,925  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7b36aa0c[Scopes.SINGLETON]}
2017-01-21 01:04:59,926  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]]}
2017-01-21 01:04:59,926  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=73, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,927  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=73, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@18df8434}
2017-01-21 01:04:59,927  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=73, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegHistogramListener, annotation=[none]]}
2017-01-21 01:04:59,928  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,928  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4686afc2}
2017-01-21 01:04:59,929  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegTimesControlerListener, annotation=[none]]}
2017-01-21 01:04:59,929  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=75, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,930  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=75, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4b45a2f5}
2017-01-21 01:04:59,930  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=75, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.TravelDistanceStatsControlerListener, annotation=[none]]}
2017-01-21 01:04:59,931  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=76, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,931  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=76, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2794eab6[Scopes.SINGLETON]}
2017-01-21 01:04:59,932  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=76, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2017-01-21 01:04:59,932  INFO Injector:77 org.matsim.analysis.ScoreStats 
2017-01-21 01:04:59,933  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2794eab6[Scopes.SINGLETON]}
2017-01-21 01:04:59,933  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2017-01-21 01:04:59,975  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=77, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,976  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=77, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1c7696c6[Scopes.SINGLETON]}
2017-01-21 01:04:59,977  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=77, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]]}
2017-01-21 01:04:59,977  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=78, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,978  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=78, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@368247b9}
2017-01-21 01:04:59,978  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=78, type=MULTIBINDER, keyType=)], source=org.matsim.counts.CountsModule.install(CountsModule.java:42), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.counts.CountsControlerListener, annotation=[none]]}
2017-01-21 01:04:59,978  INFO Injector:77 org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link> 
2017-01-21 01:04:59,983  INFO Injector:78    -> @Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)[Scopes.SINGLETON]
2017-01-21 01:04:59,984  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link>, annotation=[none]], source=org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup), scope=Scopes.SINGLETON, provider=@Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)}
2017-01-21 01:04:59,984  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=79, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,985  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=79, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4145bad8}
2017-01-21 01:04:59,985  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=79, type=MULTIBINDER, keyType=)], source=org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.population.VspPlansCleaner, annotation=[none]]}
2017-01-21 01:04:59,985  INFO Injector:77 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=80, type=MULTIBINDER, keyType=)
2017-01-21 01:04:59,986  INFO Injector:78    -> Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]
2017-01-21 01:04:59,986  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=80, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:45), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]}
2017-01-21 01:04:59,987  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=82, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:04:59,987  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=82, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@43bc63a3}
2017-01-21 01:04:59,987  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=82, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]}
2017-01-21 01:04:59,988  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=84, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:04:59,988  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=84, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.router.Transit, annotation=[none]]}
2017-01-21 01:04:59,989  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=84, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bus)]}
2017-01-21 01:04:59,989  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=86, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:04:59,989  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=86, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.router.Transit, annotation=[none]]}
2017-01-21 01:04:59,990  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=86, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]}
2017-01-21 01:04:59,990  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=88, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:04:59,998  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=88, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRouting@6a6cb05c}
2017-01-21 01:04:59,998  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=88, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]}
2017-01-21 01:04:59,999  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=90, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:04:59,999  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=90, type=MAPBINDER, keyType=java.lang.String)], provider=FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=transit_walk)], provider=org.matsim.core.router.BeelineTeleportationRouting@54d9d12d}}
2017-01-21 01:05:00,000  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=90, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=transit_walk)]}
2017-01-21 01:05:00,000  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=92, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,001  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=92, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=rideSharing.RideShareRoutingModule@505fc5a4}[Scopes.SINGLETON]}
2017-01-21 01:05:00,002  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=92, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride_share_driver)]}
2017-01-21 01:05:00,002  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=94, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,003  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=94, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@38425407}
2017-01-21 01:05:00,003  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=94, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]}
2017-01-21 01:05:00,003  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=96, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,004  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=96, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@34e9fd99}
2017-01-21 01:05:00,004  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=96, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]}
2017-01-21 01:05:00,005  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=98, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,005  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=98, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@54d9d12d}
2017-01-21 01:05:00,006  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=98, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]}
2017-01-21 01:05:00,008  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=100, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,009  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=100, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.contrib.dynagent.run.DynRoutingModule@71238fc2}[Scopes.SINGLETON]}
2017-01-21 01:05:00,009  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=100, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride_share_passenger)]}
2017-01-21 01:05:00,010  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=102, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,010  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=102, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@3c41ed1d}
2017-01-21 01:05:00,011  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=102, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]}
2017-01-21 01:05:00,011  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=104, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,012  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=104, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@702657cc}
2017-01-21 01:05:00,012  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=104, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]}
2017-01-21 01:05:00,012  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=106, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,013  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=106, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2017-01-21 01:05:00,013  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=106, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]}
2017-01-21 01:05:00,014  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=108, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,014  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=108, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2017-01-21 01:05:00,014  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=108, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=ride_share_driver)]}
2017-01-21 01:05:00,015  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=110, type=MAPBINDER, keyType=java.lang.String)
2017-01-21 01:05:00,015  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=110, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@53ce1329}[Scopes.SINGLETON]}
2017-01-21 01:05:00,016  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=110, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]}
2017-01-21 01:05:00,016  INFO Injector:77 org.matsim.core.controler.ControlerListenerManagerImpl 
2017-01-21 01:05:00,017  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@58695725[Scopes.SINGLETON]
2017-01-21 01:05:00,017  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9), scope=eager singleton}
2017-01-21 01:05:00,018  INFO Injector:77 org.matsim.analysis.IterationStopWatch 
2017-01-21 01:05:00,019  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@54422e18[Scopes.SINGLETON]
2017-01-21 01:05:00,019  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.IterationStopWatch, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12), scope=eager singleton}
2017-01-21 01:05:00,020  INFO Injector:77 org.matsim.core.controler.OutputDirectoryHierarchy 
2017-01-21 01:05:00,020  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3b0fe47a[Scopes.SINGLETON]
2017-01-21 01:05:00,021  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.OutputDirectoryHierarchy, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13), scope=eager singleton}
2017-01-21 01:05:00,021  INFO Injector:77 org.matsim.core.scoring.ScoringFunctionsForPopulation 
2017-01-21 01:05:00,022  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@58cbafc2[Scopes.SINGLETON]
2017-01-21 01:05:00,022  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionsForPopulation, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10), scope=eager singleton}
2017-01-21 01:05:00,023  INFO Injector:77 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2017-01-21 01:05:00,025  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@7161d8d1[Scopes.SINGLETON]
2017-01-21 01:05:00,025  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25), scope=eager singleton}
2017-01-21 01:05:00,026  INFO Injector:77 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2017-01-21 01:05:00,026  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@19e4653c[Scopes.SINGLETON]
2017-01-21 01:05:00,027  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.trafficmonitoring.TravelTimeCalculator, annotation=[none]], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:73), scope=Scopes.SINGLETON}
2017-01-21 01:05:00,028  INFO Injector:77 org.matsim.core.scoring.EventsToActivities 
2017-01-21 01:05:00,028  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@6bbe85a8[Scopes.SINGLETON]
2017-01-21 01:05:00,029  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToActivities, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12), scope=eager singleton}
2017-01-21 01:05:00,029  INFO Injector:77 org.matsim.core.scoring.EventsToLegs 
2017-01-21 01:05:00,030  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@4b013c76[Scopes.SINGLETON]
2017-01-21 01:05:00,030  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToLegs, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13), scope=eager singleton}
2017-01-21 01:05:00,031  INFO Injector:77 org.matsim.core.router.TripRouter 
2017-01-21 01:05:00,031  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@712625fd
2017-01-21 01:05:00,032  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.TripRouter, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:41), scope=Scopes.NO_SCOPE}
2017-01-21 01:05:00,032  INFO Injector:77 org.matsim.core.router.SingleModeNetworksCache 
2017-01-21 01:05:00,033  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@350aac89[Scopes.SINGLETON]
2017-01-21 01:05:00,033  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.SingleModeNetworksCache, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:45), scope=eager singleton}
2017-01-21 01:05:00,034  INFO Injector:77 org.matsim.core.replanning.StrategyManager 
2017-01-21 01:05:00,034  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@196a42c3[Scopes.SINGLETON]
2017-01-21 01:05:00,035  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.replanning.StrategyManager, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:47), scope=Scopes.SINGLETON}
2017-01-21 01:05:00,035  INFO Injector:77 org.matsim.analysis.CalcLinkStats 
2017-01-21 01:05:00,035  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@1349883[Scopes.SINGLETON]
2017-01-21 01:05:00,036  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLinkStats, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37), scope=eager singleton}
2017-01-21 01:05:00,036  INFO Injector:77 org.matsim.analysis.LinkStatsControlerListener 
2017-01-21 01:05:00,037  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@7b36aa0c[Scopes.SINGLETON]
2017-01-21 01:05:00,037  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46), scope=eager singleton}
2017-01-21 01:05:00,037  INFO Injector:77 org.matsim.analysis.VolumesAnalyzer 
2017-01-21 01:05:00,038  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@2d901eb0[Scopes.SINGLETON]
2017-01-21 01:05:00,038  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.VolumesAnalyzer, annotation=[none]], source=org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31), scope=eager singleton}
2017-01-21 01:05:00,038  INFO Injector:77 org.matsim.analysis.LegHistogram 
2017-01-21 01:05:00,039  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@72cc7e6f
2017-01-21 01:05:00,039  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LegHistogram, annotation=[none]], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30), scope=Scopes.NO_SCOPE}
2017-01-21 01:05:00,039  INFO Injector:77 org.matsim.analysis.CalcLegTimes 
2017-01-21 01:05:00,040  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@18271936[Scopes.SINGLETON]
2017-01-21 01:05:00,040  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLegTimes, annotation=[none]], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31), scope=Scopes.SINGLETON}
2017-01-21 01:05:00,040  INFO Injector:77 org.matsim.analysis.TravelDistanceStats 
2017-01-21 01:05:00,041  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@68c9133c[Scopes.SINGLETON]
2017-01-21 01:05:00,041  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.TravelDistanceStats, annotation=[none]], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10), scope=eager singleton}
2017-01-21 01:05:00,042  INFO Injector:77 org.matsim.analysis.ScoreStatsControlerListener 
2017-01-21 01:05:00,042  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@2794eab6[Scopes.SINGLETON]
2017-01-21 01:05:00,042  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31), scope=Scopes.SINGLETON}
2017-01-21 01:05:00,043  INFO Injector:77 org.matsim.analysis.ModeStatsControlerListener 
2017-01-21 01:05:00,043  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@1c7696c6[Scopes.SINGLETON]
2017-01-21 01:05:00,044  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31), scope=Scopes.SINGLETON}
2017-01-21 01:05:00,044  INFO Injector:77 org.matsim.counts.CountsModule$CountsInitializer 
2017-01-21 01:05:00,045  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@273444fe[Scopes.SINGLETON]
2017-01-21 01:05:00,045  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.counts.CountsModule$CountsInitializer, annotation=[none]], source=org.matsim.counts.CountsModule.install(CountsModule.java:43), scope=eager singleton}
2017-01-21 01:05:00,129  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2017-01-21 01:05:00,131  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2017-01-21 01:05:00,177  INFO TransitRouterNetwork:407 start creating transit network
2017-01-21 01:05:00,190  INFO Counter:61  node #1
2017-01-21 01:05:00,191  INFO Counter:61  node #2
2017-01-21 01:05:00,206  INFO Counter:61  link #1
2017-01-21 01:05:00,207  INFO Counter:61  link #2
2017-01-21 01:05:00,208  INFO Counter:61  node #4
2017-01-21 01:05:00,209  INFO Counter:61  link #4
2017-01-21 01:05:00,210  INFO Counter:61  node #8
2017-01-21 01:05:00,211  INFO Counter:61  link #8
2017-01-21 01:05:00,213  INFO Counter:61  node #16
2017-01-21 01:05:00,214  INFO Counter:61  link #16
2017-01-21 01:05:00,238  INFO Counter:61  node #32
2017-01-21 01:05:00,240  INFO Counter:61  link #32
2017-01-21 01:05:00,243  INFO Counter:61  node #64
2017-01-21 01:05:00,244  INFO Counter:61  link #64
2017-01-21 01:05:00,247  INFO Counter:61  node #128
2017-01-21 01:05:00,249  INFO Counter:61  link #128
2017-01-21 01:05:00,307  INFO TransitRouterNetwork:433 add transfer links
2017-01-21 01:05:00,318  INFO TransitRouterNetwork:449 264 transfer links to be added.
2017-01-21 01:05:00,320  INFO Counter:61  link #256
2017-01-21 01:05:00,322  INFO TransitRouterNetwork:455 transit router network statistics:
2017-01-21 01:05:00,335  INFO TransitRouterNetwork:456  # nodes: 158
2017-01-21 01:05:00,336  INFO TransitRouterNetwork:457  # links total:     412
2017-01-21 01:05:00,337  INFO TransitRouterNetwork:458  # transfer links:  264
2017-01-21 01:05:00,412  INFO NetworkImpl:138  node # 1
2017-01-21 01:05:00,413  INFO NetworkImpl:138  node # 2
2017-01-21 01:05:00,414  INFO NetworkImpl:134  link # 1
2017-01-21 01:05:00,415  INFO NetworkImpl:138  node # 4
2017-01-21 01:05:00,415  INFO NetworkImpl:134  link # 2
2017-01-21 01:05:00,417  INFO NetworkImpl:138  node # 8
2017-01-21 01:05:00,418  INFO NetworkImpl:134  link # 4
2017-01-21 01:05:00,419  INFO NetworkImpl:138  node # 16
2017-01-21 01:05:00,419  INFO NetworkImpl:134  link # 8
2017-01-21 01:05:00,420  INFO NetworkImpl:138  node # 32
2017-01-21 01:05:00,421  INFO NetworkImpl:134  link # 16
2017-01-21 01:05:00,422  INFO NetworkImpl:138  node # 64
2017-01-21 01:05:00,423  INFO NetworkImpl:134  link # 32
2017-01-21 01:05:00,442  INFO NetworkImpl:134  link # 64
2017-01-21 01:05:00,443  INFO NetworkImpl:138  node # 128
2017-01-21 01:05:00,470  INFO NetworkImpl:134  link # 128
2017-01-21 01:05:00,471  INFO NetworkImpl:138  node # 256
2017-01-21 01:05:00,488  INFO NetworkImpl:134  link # 256
2017-01-21 01:05:00,501  INFO NetworkImpl:138  node # 512
2017-01-21 01:05:00,506  INFO NetworkImpl:134  link # 512
2017-01-21 01:05:00,511  INFO NetworkImpl:138  node # 1024
2017-01-21 01:05:00,548  INFO NetworkImpl:134  link # 1024
2017-01-21 01:05:00,592  INFO NetworkImpl:134  link # 2048
2017-01-21 01:05:00,692  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2017-01-21 01:05:00,710  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2017-01-21 01:05:00,710  INFO ControlerUtils:58 config dump before iterations start
2017-01-21 01:05:00,852  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>

<!-- ====================================================================== -->

	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >
		<param name="mutationAffectsDuration" value="true" />

		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="3600.0" />
	</module>

<!-- ====================================================================== -->

<!-- ====================================================================== -->

	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="false" />
		<param name="modes" value="ride_share_passenger,ride_share_driver,car" />
	</module>

<!-- ====================================================================== -->

	<module name="controler" >

		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />

		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />

		<!-- Default=false;  -->
		<param name="enableLinkToLinkRouting" value="false" />

		<!-- Default=xml; Specifies the file format for writing events. Currently supported: txt, xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />

		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />

		<!-- Default=1000;  -->
		<param name="lastIteration" value="5" />

		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />

		<param name="outputDirectory" value="output_20170120" />

		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />

		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />

		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />

		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />

		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="5" />

		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="5" />

		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>

<!-- ====================================================================== -->

	<module name="counts" >

		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />

		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="facilities" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputFacilitiesFile" value="facilities.xml.gz" />
		<param name="inputFacilityAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />

		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />

		<param name="randomSeed" value="4711" />
	</module>

<!-- ====================================================================== -->

	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="linkStats" >

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />

		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="network" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="network.xml" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="otfvis" >

		<!-- The (initial) size of the agents.  Only a range of numbers is allowed, otherwise otfvis aborts rather ungracefully, or displays no agents at all. -->
		<param name="agentSize" value="120.0" />

		<!-- coloring scheme for otfvis.  Currently (2012) allowed values: standard bvg bvg2 byId gtfs taxicab -->
		<param name="coloringScheme" value="standard" />

		<!-- If non-moving items (e.g. agents at activities, at bus stops, etc.) should be showed.  May affect all non-moving items. -->
		<param name="drawNonMovingItems" value="false" />

		<param name="drawTransitFacilities" value="true" />
		<param name="drawTransitFacilityIds" value="true" />
		<param name="leftMouseFunc" value="Zoom" />

		<!-- The (initial) width of the links of the network. Use positive floating point values. -->
		<param name="linkWidth" value="30.0" />

		<!-- Link width is proportional to `numberOfLanes' or to `capacity'. -->
		<param name="linkwidthIsProportionalTo" value="numberOfLanes" />

		<!-- URL to get WMS tiles from. For a local GeoServer instance, use http://localhost:8080/geoserver/wms?service=WMS& -->
		<param name="mapBaseURL" value="" />

		<!-- The WMS layer to display. For GeoServer and a layer called clipped in workspace mz, use mz:clipped -->
		<param name="mapLayer" value="" />

		<!-- Render everything on top of map tiles. Default: From tiles.openstreetmap.org -->
		<param name="mapOverlayMode" value="false" />

		<param name="middleMouseFunc" value="Pan" />
		<param name="rightMouseFunc" value="Select" />
		<param name="showTeleportation" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="parallelEventHandling" >

		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />

		<!-- Number of threads for parallel events handler. 0 or null means the framework decides by itself. -->
		<param name="numberOfThreads" value="null" />

		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />

		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>

<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />

		<param name="PathSizeLogitBeta" value="1.0" />

		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />

		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="true" />

		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="0.0" />
			<param name="lateArrival" value="0.0" />
			<param name="marginalUtilityOfMoney" value="0.062" />
			<param name="performing" value="0.96" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="0.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-0.18" />

			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="01:00:00" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="13:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="work" />
				<param name="closingTime" value="18:00:00" />
				<param name="earliestEndTime" value="17:00:00" />
				<param name="latestStartTime" value="09:00:00" />
				<param name="minimalDuration" value="08:00:00" />
				<param name="openingTime" value="08:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="09:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="secondary" />
				<param name="closingTime" value="20:00:00" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="00:30:00" />
				<param name="openingTime" value="08:00:00" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="01:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="RideSharePickup" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="00:01:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="RideShareDropoff" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="00:01:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="BeforeVrpSchedule" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="00:01:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="RideShareStay" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<param name="typicalDuration" value="00:02:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="-0.562" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />

				<param name="mode" value="car" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="-4.0E-4" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="-0.124" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-0.18" />

				<param name="mode" value="pt" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-1.14" />

				<param name="mode" value="walk" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="bike" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="other" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="-0.5" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="ride_share_driver" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="plans" >

		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />

		<param name="inputPlansFile" value="population_1prct.xml.gz" />

		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />

		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />

		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>

<!-- ====================================================================== -->

	<module name="planscalcroute" >

		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="ptCounts" >

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />

		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />

		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />

		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="qsim" >
		<param name="endTime" value="30:00:00" />
		<param name="flowCapacityFactor" value="0.7" />

		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />

		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />

		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />

		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />

		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car,ride_share_driver" />

		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />

		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="4" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />

		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />

		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="onlyUseStarttime" />

		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles  -->
		<param name="snapshotStyle" value="equiDist" />

		<param name="snapshotperiod" value="00:00:10" />
		<param name="startTime" value="00:00:00" />
		<param name="storageCapacityFactor" value="1.0" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="3600.0" />

		<param name="timeStepSize" value="00:00:01" />

		<!-- options: queue withHoles  -->
		<param name="trafficDynamics" value="queue" />

		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />

		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />

		<!-- normally, the qsim accumulates fractional flows up to one flow unit in every time step.  If this switch is set to true, flows are updated only if an agent wants to enter the link or an agent is added to buffer.Will probably become the default eventually. -->
		<param name="usingFastCapacityUpdate" value="false" />

		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />

		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />

		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData fromVrpData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>

<!-- ====================================================================== -->

	<module name="scenario" >
	</module>

<!-- ====================================================================== -->

	<module name="strategy" >

		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />

		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />

		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />

		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />

		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />

		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: KeepLastSelected BestScore ChangeExpBeta SelectExpBeta SelectRandom SelectPathSizeLogit  (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ChangeExpBeta" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.05" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: KeepLastSelected BestScore ChangeExpBeta SelectExpBeta SelectRandom SelectPathSizeLogit  (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ChangeTripMode" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.7" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="420" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: KeepLastSelected BestScore ChangeExpBeta SelectExpBeta SelectRandom SelectPathSizeLogit  (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.05" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="420" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: KeepLastSelected BestScore ChangeExpBeta SelectExpBeta SelectRandom SelectPathSizeLogit  (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="SubtourModeChoice" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.05" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="420" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: KeepLastSelected BestScore ChangeExpBeta SelectExpBeta SelectRandom SelectPathSizeLogit  (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="TimeAllocationMutator" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.05" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,ride_share_driver" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="true" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,walk,ride_share_driver,ride_share_passenger" />
	</module>

<!-- ====================================================================== -->

	<module name="transit" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />

		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />

		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt,bus" />

		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="schedule.xml" />

		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />

		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="true" />

		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="vehicles.xml" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="500.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="300.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1500.0" />
	</module>

<!-- ====================================================================== -->

	<module name="travelTimeCalculator" >

		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car,ride_share_driver" />

		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />

		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />

		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />

		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />

		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />

		<!-- possible values: nullTravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />

		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>

<!-- ====================================================================== -->

	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="vspExperimental" >

		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />

		<param name="isGeneratingBoardingDeniedEvent" value="false" />

		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />

		<param name="logitScaleParamForPlansRemoval" value="1.0" />

		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />

		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>

<!-- ====================================================================== -->

</config>

2017-01-21 01:05:00,904  INFO ControlerUtils:63 Complete config dump done.
2017-01-21 01:05:00,904  INFO ControlerUtils:64 Checking consistency of config...
2017-01-21 01:05:00,906  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2017-01-21 01:05:00,907  INFO ControlerUtils:66 Checking consistency of config done.
2017-01-21 01:05:00,908  INFO PrepareForSimImpl:56 Network seems to be multimodal. Create car-only network which is handed over to PersonPrepareForSim.
2017-01-21 01:05:00,908  INFO NetworkImpl:138  node # 1
2017-01-21 01:05:00,909  INFO NetworkImpl:138  node # 2
2017-01-21 01:05:00,909  INFO NetworkImpl:134  link # 1
2017-01-21 01:05:00,910  INFO NetworkImpl:138  node # 4
2017-01-21 01:05:00,910  INFO NetworkImpl:134  link # 2
2017-01-21 01:05:00,911  INFO NetworkImpl:138  node # 8
2017-01-21 01:05:00,911  INFO NetworkImpl:134  link # 4
2017-01-21 01:05:00,912  INFO NetworkImpl:138  node # 16
2017-01-21 01:05:00,912  INFO NetworkImpl:134  link # 8
2017-01-21 01:05:00,912  INFO NetworkImpl:138  node # 32
2017-01-21 01:05:00,913  INFO NetworkImpl:134  link # 16
2017-01-21 01:05:00,913  INFO NetworkImpl:138  node # 64
2017-01-21 01:05:00,913  INFO NetworkImpl:134  link # 32
2017-01-21 01:05:00,914  INFO NetworkImpl:134  link # 64
2017-01-21 01:05:00,914  INFO NetworkImpl:138  node # 128
2017-01-21 01:05:00,915  INFO NetworkImpl:134  link # 128
2017-01-21 01:05:00,945  INFO NetworkImpl:138  node # 256
2017-01-21 01:05:00,947  INFO NetworkImpl:134  link # 256
2017-01-21 01:05:00,948  INFO NetworkImpl:138  node # 512
2017-01-21 01:05:00,951  INFO NetworkImpl:134  link # 512
2017-01-21 01:05:00,954  INFO NetworkImpl:138  node # 1024
2017-01-21 01:05:00,958  INFO NetworkImpl:134  link # 1024
2017-01-21 01:05:00,970  INFO NetworkImpl:134  link # 2048
2017-01-21 01:05:01,099  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2017-01-21 01:05:01,099  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2017-01-21 01:05:01,100  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2017-01-21 01:05:01,100  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2017-01-21 01:05:01,101  INFO Counter:61 [PersonPrepareForSim] handled person # 16
2017-01-21 01:05:01,101  INFO Counter:61 [PersonPrepareForSim] handled person # 32
2017-01-21 01:05:01,101  INFO Counter:61 [PersonPrepareForSim] handled person # 64
2017-01-21 01:05:01,102  INFO Counter:61 [PersonPrepareForSim] handled person # 128
2017-01-21 01:05:01,103  INFO Counter:61 [PersonPrepareForSim] handled person # 256
2017-01-21 01:05:01,104  INFO Counter:61 [PersonPrepareForSim] handled person # 512
2017-01-21 01:05:01,106  INFO Counter:67 [PersonPrepareForSim] handled person # 825
2017-01-21 01:05:01,110  INFO AbstractController:133 ###################################################
2017-01-21 01:05:01,111  INFO AbstractController:134 ### ITERATION 0 BEGINS
2017-01-21 01:05:01,149  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2017-01-21 01:05:01,149  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2017-01-21 01:05:01,149  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2017-01-21 01:05:01,150  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on null
2017-01-21 01:05:01,152  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on null
2017-01-21 01:05:01,509  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2017-01-21 01:05:01,530  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2017-01-21 01:05:01,531  INFO EventsManagerImpl:170 resetting Event-Handlers
2017-01-21 01:05:01,531  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2017-01-21 01:05:01,532  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2017-01-21 01:05:01,532  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2017-01-21 01:05:01,533  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2017-01-21 01:05:01,533  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2017-01-21 01:05:01,534  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2017-01-21 01:05:01,534  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2017-01-21 01:05:01,556  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2017-01-21 01:05:01,556  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2017-01-21 01:05:01,557  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2017-01-21 01:05:01,558  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2017-01-21 01:05:01,558  INFO EventsManagerImpl:156 
2017-01-21 01:05:01,559  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2017-01-21 01:05:01,559  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2017-01-21 01:05:01,560  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2017-01-21 01:05:01,561  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2017-01-21 01:05:01,561  INFO EventsManagerImpl:156 
2017-01-21 01:05:01,584  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2017-01-21 01:05:01,585  INFO PlansDumpingImpl:75 dumping plans...
2017-01-21 01:05:01,696  INFO Counter:61 [PopulationWriter] dumped person # 1
2017-01-21 01:05:01,698  INFO Counter:61 [PopulationWriter] dumped person # 2
2017-01-21 01:05:01,700  INFO Counter:61 [PopulationWriter] dumped person # 4
2017-01-21 01:05:01,709  INFO Counter:61 [PopulationWriter] dumped person # 8
2017-01-21 01:05:01,732  INFO Counter:61 [PopulationWriter] dumped person # 16
2017-01-21 01:05:01,747  INFO Counter:61 [PopulationWriter] dumped person # 32
2017-01-21 01:05:01,767  INFO Counter:61 [PopulationWriter] dumped person # 64
2017-01-21 01:05:01,817  INFO Counter:61 [PopulationWriter] dumped person # 128
2017-01-21 01:05:01,912  INFO Counter:61 [PopulationWriter] dumped person # 256
2017-01-21 01:05:02,056  INFO Counter:61 [PopulationWriter] dumped person # 512
2017-01-21 01:05:02,210  INFO PopulationWriter:144 Population written to: output_20170120/ITERS/it.0/0.plans.xml.gz
2017-01-21 01:05:02,214  INFO Counter:67 [PopulationWriter] dumped person # 825
2017-01-21 01:05:02,215  INFO PlansDumpingImpl:92 finished plans dump.
2017-01-21 01:05:02,216  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2017-01-21 01:05:02,225  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2017-01-21 01:05:02,772  INFO Injector:77 org.matsim.api.core.v01.Scenario 
2017-01-21 01:05:02,773  INFO Injector:78    -> of(org.matsim.core.scenario.MutableScenario@71def8f8)
2017-01-21 01:05:02,774  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.api.core.v01.Scenario, annotation=[none]], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:31), instance=org.matsim.core.scenario.MutableScenario@71def8f8}
2017-01-21 01:05:02,774  INFO Injector:77 org.matsim.pt.transitSchedule.api.TransitSchedule 
2017-01-21 01:05:02,775  INFO Injector:78    -> Key[type=org.matsim.core.scenario.ScenarioByInstanceModule$TransitScheduleProvider, annotation=[none]]
2017-01-21 01:05:02,776  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.pt.transitSchedule.api.TransitSchedule, annotation=[none]], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:33), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.scenario.ScenarioByInstanceModule$TransitScheduleProvider, annotation=[none]]}
2017-01-21 01:05:02,776  INFO Injector:77 org.matsim.vehicles.Vehicles 
2017-01-21 01:05:02,777  INFO Injector:78    -> Key[type=org.matsim.core.scenario.ScenarioByInstanceModule$TransitVehiclesProvider, annotation=[none]]
2017-01-21 01:05:02,778  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=@org.matsim.pt.transitSchedule.api.Transit], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:34), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.scenario.ScenarioByInstanceModule$TransitVehiclesProvider, annotation=[none]]}
2017-01-21 01:05:02,778  INFO Injector:77 org.matsim.vehicles.Vehicles 
2017-01-21 01:05:02,779  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2017-01-21 01:05:02,779  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=[none]], source=org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)}
2017-01-21 01:05:02,780  INFO Injector:77 org.matsim.lanes.data.Lanes 
2017-01-21 01:05:02,781  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2017-01-21 01:05:02,781  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.lanes.data.Lanes, annotation=[none]], source=org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)}
2017-01-21 01:05:02,782  INFO Injector:77 org.matsim.api.core.v01.network.Network 
2017-01-21 01:05:02,783  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2017-01-21 01:05:02,783  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.network.Network, annotation=[none]], source=org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)}
2017-01-21 01:05:02,784  INFO Injector:77 org.matsim.households.Households 
2017-01-21 01:05:02,784  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2017-01-21 01:05:02,785  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.households.Households, annotation=[none]], source=org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)}
2017-01-21 01:05:02,786  INFO Injector:77 org.matsim.api.core.v01.population.PopulationFactory 
2017-01-21 01:05:02,786  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2017-01-21 01:05:02,787  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.PopulationFactory, annotation=[none]], source=org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)}
2017-01-21 01:05:02,788  INFO Injector:77 org.matsim.facilities.ActivityFacilities 
2017-01-21 01:05:02,788  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2017-01-21 01:05:02,789  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.facilities.ActivityFacilities, annotation=[none]], source=org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)}
2017-01-21 01:05:02,789  INFO Injector:77 org.matsim.api.core.v01.population.Population 
2017-01-21 01:05:02,790  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2017-01-21 01:05:02,790  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.Population, annotation=[none]], source=org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)}
2017-01-21 01:05:02,791  INFO Injector:77 org.matsim.core.api.experimental.events.EventsManager 
2017-01-21 01:05:02,791  INFO Injector:78    -> of(org.matsim.core.events.SimStepParallelEventsManagerImpl@4149c063)
2017-01-21 01:05:02,792  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimUtils$StandaloneQSimModule.install(QSimUtils.java:71), instance=org.matsim.core.events.SimStepParallelEventsManagerImpl@4149c063}
2017-01-21 01:05:02,792  INFO Injector:77 org.matsim.core.mobsim.framework.Mobsim 
2017-01-21 01:05:02,793  INFO Injector:78    -> Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]
2017-01-21 01:05:02,794  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.Mobsim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:29), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]}
2017-01-21 01:05:02,794  INFO Injector:77 org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory 
2017-01-21 01:05:02,795  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@53f3bdbd}
2017-01-21 01:05:02,795  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.DefaultQNetworkFactory, annotation=[none]]}
2017-01-21 01:05:04,297  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-01-21 01:05:04,298  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2017-01-21 01:05:04,298  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-01-21 01:05:04,299  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2017-01-21 01:05:04,436  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-01-21 01:05:04,436  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.contrib.otfvis.OTFVisLiveModule$OTFVisMobsimListener
2017-01-21 01:05:04,436  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2017-01-21 01:05:04,437  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-01-21 01:05:04,452  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-01-21 01:05:04,452  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2017-01-21 01:05:04,453  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-01-21 01:05:04,453  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2017-01-21 01:05:04,453  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2017-01-21 01:05:04,454  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2017-01-21 01:05:04,515  INFO ReconstructingUmlaufBuilder:112 Generating UmlaufStuecke
2017-01-21 01:05:04,948  INFO QNetsimEngine:510 Assigned 453 nodes and 853 links to QSimEngineRunner #0
2017-01-21 01:05:04,948  INFO QNetsimEngine:510 Assigned 453 nodes and 835 links to QSimEngineRunner #1
2017-01-21 01:05:04,949  INFO QNetsimEngine:510 Assigned 452 nodes and 847 links to QSimEngineRunner #2
2017-01-21 01:05:04,949  INFO QNetsimEngine:510 Assigned 452 nodes and 824 links to QSimEngineRunner #3
2017-01-21 01:05:05,197  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2017-01-21 01:05:05,197  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2017-01-21 01:05:05,198  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2017-01-21 01:05:05,198  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2017-01-21 01:05:05,198  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.otfvis.PlayPauseSimulationControl$PlayPauseMobsimListener
2017-01-21 01:05:05,198  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2017-01-21 01:05:05,789  INFO QNetsimEngine:355 SIMULATION (QNetsimEngine) AT 00:00:00 : #links=0 #nodes=0
2017-01-21 01:05:05,790  INFO QSim:507 SIMULATION (NEW QSim) AT 00:00:00 : #Veh=2875 lost=0 simT=0.0s realT=1s; (s/r): 0.0
2017-01-21 01:05:05,790  INFO Gbl:52 used RAM: 191558048B = 187068kB = 182MB  free: 76353120B = 72MB  total: 267911168B = 255MB
2017-01-21 01:05:39,823  INFO OnTheFlyServer:201 Adding additional element: org.matsim.vis.otfvis.handler.FacilityDrawer$Writer
2017-01-21 01:05:39,987  INFO OTFServerQuadTree:129 Connected additional element writer org.matsim.vis.otfvis.handler.FacilityDrawer$Writer(org.matsim.vis.otfvis.handler.FacilityDrawer$Writer@39244151)  to org.matsim.vis.otfvis.handler.FacilityDrawer$Reader (org.matsim.vis.otfvis.handler.FacilityDrawer$Reader@df59f76)
2017-01-21 01:05:40,565  INFO OTFClientQuadTree:144   read constant data
2017-01-21 01:05:56,015  INFO OTFVisFrame:109 created MainFrame
2017-01-21 01:05:56,016  INFO OTFVisFrame:112 got OTFVis config
2017-01-21 01:05:57,831  INFO OTFVisFrame:115 created HostControlBar
2017-01-21 01:05:57,832  INFO OTFVisFrame:116 created drawer
2017-01-21 01:06:03,723  INFO MatsimResource:108 Resource 'otfvis/marker.png' not found locally. May not be fatal.
2017-01-21 01:06:03,994  INFO MatsimResource:108 Resource 'icon18.png' not found locally. May not be fatal.
2017-01-21 01:06:20,454 DEBUG OTFHostControl:105 Pressed PLAY, creating animator.
2017-01-21 01:06:46,466  INFO QNetsimEngine:355 SIMULATION (QNetsimEngine) AT 01:00:00 : #links=0 #nodes=0
2017-01-21 01:06:46,467  INFO QSim:507 SIMULATION (NEW QSim) AT 01:00:00 : #Veh=2875 lost=0 simT=3600.0s realT=102s; (s/r): 35.294117647058826
2017-01-21 01:06:46,467  INFO Gbl:52 used RAM: 281435104B = 274838kB = 268MB  free: 63022112B = 60MB  total: 344457216B = 328MB
2017-01-21 01:06:47,375  INFO QNetsimEngine:355 SIMULATION (QNetsimEngine) AT 02:00:00 : #links=0 #nodes=0
2017-01-21 01:06:47,376  INFO QSim:507 SIMULATION (NEW QSim) AT 02:00:00 : #Veh=2875 lost=0 simT=7200.0s realT=103s; (s/r): 69.90291262135922
2017-01-21 01:06:47,376  INFO Gbl:52 used RAM: 295996768B = 289059kB = 282MB  free: 48460448B = 46MB  total: 344457216B = 328MB
